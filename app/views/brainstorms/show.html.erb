<div class="hidden" id="someone-tried-to-join">
  <%= render "someone_tried_to_join" %>
</div>
<%= render "shared/user_menu" %>
<%= render 'nav' %>
<%= render 'dev_nav' if Rails.env.development? %>
<div class="hidden" id="ideation">
  <%= render 'ideate' %>
</div>
<div id="choose-idea-to-merge-into">
</div>
<div class="hidden" id="setup">
  <div id="setup_participant">
    <%= render 'setup_participant' %>
  </div>
  <div id="setup_facilitator">
    <%= render 'setup_facilitator' %>
  </div>
</div>

<div class="hidden" id="time_is_up" onclick="this.classList.add('hidden')">
  <%= render 'time_is_up' %>
</div>
<div class="hidden" id="vote">
  <%= render 'vote' %>
</div>
<div class="hidden" id="voting_done">
  <%= render 'voting_done' %>
  <%= render 'brainstorms/emails/form' %>
</div>

<script>
  currentUser = {
    visitorId: '<%= @visitor_id %>',
    facilitator: '<%= @current_facilitator %>',
    votesCastIdeas: new Set(<%= @voting.idea_votes %>),
    userIsDoneVoting: '<%= @voting.done? %>',
    type: '<%= @session.type %>',
    plan: '<%= @plan %>'
  };

  brainstormStore = {
    state: '<%= @brainstorm.state %>',
    maxVotesPerUser: '<%= @voting.dynamic_vote_count %>'
  };

  const createRandomUserName = () => {
    const adjectives = ["Sleeping", "Hungry", "Purple", "Hairy", "Wet", "Hungarian", "Australian", "Cross-eyed", "Mind-reading", "Fierce", "Wig-wearing", "Busy", "Bingo-playing", "Talking", "Cool", "Amazing", "Happy", "Lovely", "Tomb Raiding", "Self-aware", "Flying", "Bald", "The Best", "Space-exploring", "To-the-point", "Forgetful", "Visionary", "Well-behaved", "Totally Awesome", "Hilarious", "Charming", "Royal", "Rapid", "Adorable", "Cheerful", "Expert", "Wacky", "Fluffy", "Smart", "Well-articulated", "Sophisticated", "Tickly", "Wise", "Lucky", "The One True", "Unreal", "Silly", "Smooth", "Tongue-twisting", "Tiny", "Carnivorous", "Vegetarian", "Grounded", "Mischievous", "Tropical", "Arctic", "Polite", "Frivolous", "Tactical", "Organized", "Dazzled", "Jolly", "Diligent", "Famous", "Hip", "Bored", "Unmarried", "Travelling", "Brainy", "Blue-eyed", "Nosey", "Adventurous", "Acidic", "Important"]
    const nouns = ["Tiger", "Turtle", "Cat", "Sloth", "Hedgehog", "Space Explorer", "Mouse", "Hamster", "Tea Pot", "Alien", "Traveller", "Bear", "Fish", "Donkey", "Horse", "Zebra", "Lion", "Otter", "Spider", "Architect", "Surgeon", "Friend", "Coffee Cup", "Computer", "Super Hero", "Boy", "Girl", "Ant", "Dinosaur", "Bird", "Camel", "Duck", "Gecko", "Astronaut", "Biologist", "Villain", "Body Builder", "Gummy Bear", "Ice Cream", "Ferret", "Fox", "Alpaca", "Wallaby", "Squid", "Beatle", "Beet", "Dog", "Snail", "Crab", "Camel", "Student", "Farmer", "Sheep", "Grandma", "Piggy", "Tarantula", "Hawk", "Crocodile", "Guitarist", "Drummer", "Organist", "Priest", "Hyena", "Goblin", "Marshmellow", "Rock", "Therapist", "Musician", "Penguin", "Piranha", "Duckling", "Puppy", "Toaster", "Barista", "Nephew", "Hippo", "Hipster", "Panda", "Bridesmaid", "Bat", "Suitcase", "Radiator", "Flashlight", "Escalator", "Elevator"]

    let adjective = adjectives[Math.floor(Math.random() * adjectives.length)];
    let noun = nouns[Math.floor(Math.random() * nouns.length)];

    return `${adjective} ${noun}`
  }

  const openSendEmailModal = () => {
    document.getElementById("emailModalContainer").classList.add("flex")
    document.getElementById("emailModalContainer").classList.remove("hidden")
    // document.getElementById("notice").innerHTML = ""
    // document.getElementById("error-field-email-address").innerHTML = ""
  }

  const showCurrentUser = () => {
    let currentUserBadge = document.getElementById(currentUser.visitorId)
    let currentUserBadgesWrapper = document.getElementById("user-list")
    currentUserBadge.parentNode.appendChild(currentUserBadge);
    currentUserBadge.lastChild.remove()
    currentUserBadge.lastChild.remove()
    currentUserBadge.classList.add("bg-black", "cursor-pointer")
    currentUserBadge.classList.remove("cursor-default")
    currentUserBadge.firstChild.classList.add("bg-white", "text-black")
    currentUserBadge.firstChild.classList.remove("bg-purply", "bg-greeny", "bg-yellowy", "bg-reddy", "text-white")
    currentUserBadge.lastChild.classList.add("bg-black")
    currentUserBadge.lastChild.classList.remove("bg-purply", "bg-greeny", "bg-yellowy", "bg-reddy")
    currentUserBadge.addEventListener("click", toggleMenu)

    doneDivForCurrentUser = document.getElementById(`user-done-${currentUser.visitorId}`)
    doneDivForCurrentUser.parentNode.appendChild(doneDivForCurrentUser);
  }

  const setCurrentUserName = (name) => {
    currentUser.currentUserName = name
  }

  const copyAction = (value) => {
    let tempInput = document.createElement("input");
    tempInput.style = "position: absolute; left: -1000px; top: -1000px";
    tempInput.value = value;
    document.body.appendChild(tempInput);
    tempInput.select();
    document.execCommand("copy");
    document.body.removeChild(tempInput);
    let tooltip = document.getElementById("myTooltip");
    tooltip.innerHTML = "Copied!";
  }

  const copyUrlMobile = (value) => {
  let tempInput = document.createElement("input");
  tempInput.style = "position: absolute; left: -1000px; top: -1000px";
  tempInput.value = value;
  document.body.appendChild(tempInput);
  tempInput.select();
  tempInput.setSelectionRange(0, 99999);
  navigator.clipboard.writeText(tempInput.value);
  tempInput.remove()
  document.getElementById("notice-mobile").innerHTML = '<div class="text-3xl bg-greeny fade-out inset-x-0 fixed text-white text-center py-4 z-50 font-bold my-shadow"><span>Brainstorm link copied to clipboard</span></div>'
}

  const copyToken = (value) => {
    let tempInput = document.createElement("input");
    tempInput.style = "position: absolute; left: -1000px; top: -1000px";
    tempInput.value = value;
    document.body.appendChild(tempInput);
    tempInput.select();
    document.execCommand("copy");
    document.body.removeChild(tempInput);
    let tooltip = document.getElementById("tooltipToken");
    tooltip.innerHTML = "Copied!";
  }

  const getURL = () => {
    return window.location.href;
  }

  const getToken = () => {
    return window.location.pathname.replace("/", "")
  }

  const outFunc = () => {
    var tooltip = document.getElementById("myTooltip");
    tooltip.innerHTML = "Copy to clipboard";
  }

  const tokenOutFunc = () => {
    var tooltip = document.getElementById("tooltipToken");
    tooltip.innerHTML = "Copy to clipboard";
  }

  const toggleDownloadButtonSpinner = (type) => {
    element1 = document.getElementById(`save-to-${type}-button-icon`);
    element2 = document.getElementById(`save-to-${type}-button-spinner`);
    element1.classList.toggle("hidden")
    element2.classList.toggle("hidden")
  }

  const clickDownloadButton = (type) => {
    let downloadButton = document.getElementById(`save-to-${type}-button`);
    downloadButton.click();
  }

  if (currentUser.userIsDoneVoting == "false") {
    document.getElementById("done-button").innerHTML = "DONE"
  } else if (currentUser.userIsDoneVoting == "true") {
    document.getElementById("done-button").innerHTML = "CHANGE VOTES"
  }
</script>
